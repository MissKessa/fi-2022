################################################################################
# 
# Computing Basics / Fundamentos de Inform√°tica
# University of Oviedo / Universidad de Oviedo
#
# Copyright (c) 2022 Javier Escalada G√≥mez
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, version 3.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <https://www.gnu.org/licenses/>.
#
###

import random

CARDS = [
    # Clubs -> Monsters
    ["‚ô£", "A", "M", 17],
    ["‚ô£", 2, "M", 2],
    ["‚ô£", 3, "M", 3],
    ["‚ô£", 4, "M", 4],
    ["‚ô£", 5, "M", 5],
    ["‚ô£", 6, "M", 6],
    ["‚ô£", 7, "M", 7],
    ["‚ô£", 8, "M", 8],
    ["‚ô£", 9, "M", 9],
    ["‚ô£", 10, "M", 10],
    ["‚ô£", "J", "M", 11],
    ["‚ô£", "Q", "M", 13],
    ["‚ô£", "K", "M", 15],

    # Diamonds -> Shields
    ["‚ô¶", "A", "S", 11],
    ["‚ô¶", 2, "S", 2],
    ["‚ô¶", 3, "S", 3],
    ["‚ô¶", 4, "S", 4],
    ["‚ô¶", 5, "S", 5],
    ["‚ô¶", 6, "S", 6],
    ["‚ô¶", 7, "S", 7],
    ["‚ô¶", 8, "S", 8],
    ["‚ô¶", 9, "S", 9],
    ["‚ô¶", 10, "S", 10],
    ["‚ô¶", "J", "S", 11],
    ["‚ô¶", "Q", "S", 11],
    ["‚ô¶", "K", "S", 11],

    # Hearts -> Potions
    ["‚ô•", "A", "P", 11],
    ["‚ô•", 2, "P", 2],
    ["‚ô•", 3, "P", 3],
    ["‚ô•", 4, "P", 4],
    ["‚ô•", 5, "P", 5],
    ["‚ô•", 6, "P", 6],
    ["‚ô•", 7, "P", 7],
    ["‚ô•", 8, "P", 8],
    ["‚ô•", 9, "P", 9],
    ["‚ô•", 10, "P", 10],
    ["‚ô•", "J", "P", 11],
    ["‚ô•", "Q", "P", 11],
    ["‚ô•", "K", "P", 11],

    # Spades -> Monsters
    ["‚ô†", "A", "M", 17],
    ["‚ô†", 2, "M", 2],
    ["‚ô†", 3, "M", 3],
    ["‚ô†", 4, "M", 4],
    ["‚ô†", 5, "M", 5],
    ["‚ô†", 6, "M", 6],
    ["‚ô†", 7, "M", 7],
    ["‚ô†", 8, "M", 8],
    ["‚ô†", 9, "M", 9],
    ["‚ô†", 10, "M", 10],
    ["‚ô†", "J", "M", 11],
    ["‚ô†", "Q", "M", 13],
    ["‚ô†", "K", "M", 15],
    
    # Jokers -> Monsters
    ["üÉü", "", "M", 21],
    ["üÉü", "", "M", 21],
]

MAX_HP = 21


def init_deck():
    deck = list(range(54))
    random.shuffle(deck)
    return deck


def pop_cards(deck, amount):
    cards = deck[:amount]
    deck = deck[amount:]
    return deck, cards


def push_cards(deck, cards):
    deck += cards
    random.shuffle(deck)
    cards = []
    return deck, cards


def card_str(card):
    suit = CARDS[card][0]
    rank = CARDS[card][1]
    type = CARDS[card][2]
    power = CARDS[card][3]
    if type == "S":
        return f"{suit}{rank} Shield({power})"
    if type == "P":
        return f"{suit}{rank} Potion({power})"
    return f"{suit}{rank} Monster({power})"


def show_state(hp, dp, xp):
    print(f"Health: {hp:02d} Defense: {dp:02d} Experience: {xp:02d}")


def show_options(cards):
    print(f"{0:3d}: Run")
    for i, card in enumerate(cards):
        print(f"{i+1:3d}: {card_str(card)}")


def ask_int(prompt):
    while True:
        n = input(prompt)
        if n.lstrip("-").isdigit():
            return int(n)
        print("Please enter a number.")


def ask_int_in_range(prompt, min, max):
    while True:
        n = ask_int(prompt)
        if min <= n <= max:
            return n
        print(f"Please enter a number between {min} and {max}.")


def ask_option(cards, hp, dp, xp):
    show_state(hp, dp, xp)
    show_options(cards)
    min = 0
    max = len(cards)
    return ask_int_in_range(f"Choose from [{min}, {max}]: ", min, max)


def eval_card(card, hp, dp, xp, last_was_potion):
    type = CARDS[card][2]
    power = CARDS[card][3]
    if type == "P":
        if not last_was_potion and hp < MAX_HP:
            old_hp = hp
            hp = min(hp + power, MAX_HP)
            print(f"You heal for {hp-old_hp} health points")
        else:
            print("You wasted the potion")
        last_was_potion = True
    elif type == "S":
        last_was_potion = False
        if dp > 0:
            print(f"You toss away the shield with {dp} defense points")
        dp = power
        print(f"You equip a shield with {dp} defense points")
    else:
        last_was_potion = False
        if dp > 0:
            print(f"Your shield absorbs {dp} attack points")
            dp -= power
            if dp <= 0:
                print("Your shield breaks")
            if dp < 0:
                print(f"You loose {min(hp, -dp)} health points")
                hp = max(hp + dp, 0)
                dp = 0
        else:
            print(f"You loose {min(hp, power)} health points")
            hp = max(hp - power, 0)
        if hp > 0:
            print(f"You kill a monster with {power} health points")
    if hp > 0:
        xp += 1
    return hp, dp, xp, last_was_potion


def main():

    # From: https://patorjk.com/software/taag/#p=testall&f=Bloody&t=Dungeon%20of%20Doom!!!
    print("""
‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ  ‚ñà    ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñÑ    ‚ñà   ‚ñÑ‚ñà‚ñà‚ñà‚ñà ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñÑ    ‚ñà 
‚ñí‚ñà‚ñà‚ñÄ ‚ñà‚ñà‚ñå ‚ñà‚ñà  ‚ñì‚ñà‚ñà‚ñí ‚ñà‚ñà ‚ñÄ‚ñà   ‚ñà  ‚ñà‚ñà‚ñí ‚ñÄ‚ñà‚ñí‚ñì‚ñà   ‚ñÄ ‚ñí‚ñà‚ñà‚ñí  ‚ñà‚ñà‚ñí ‚ñà‚ñà ‚ñÄ‚ñà   ‚ñà 
‚ñë‚ñà‚ñà   ‚ñà‚ñå‚ñì‚ñà‚ñà  ‚ñí‚ñà‚ñà‚ñë‚ñì‚ñà‚ñà  ‚ñÄ‚ñà ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñë‚ñÑ‚ñÑ‚ñÑ‚ñë‚ñí‚ñà‚ñà‚ñà   ‚ñí‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà  ‚ñÄ‚ñà ‚ñà‚ñà‚ñí
‚ñë‚ñì‚ñà‚ñÑ   ‚ñå‚ñì‚ñì‚ñà  ‚ñë‚ñà‚ñà‚ñë‚ñì‚ñà‚ñà‚ñí  ‚ñê‚ñå‚ñà‚ñà‚ñí‚ñë‚ñì‚ñà  ‚ñà‚ñà‚ñì‚ñí‚ñì‚ñà  ‚ñÑ ‚ñí‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñì‚ñà‚ñà‚ñí  ‚ñê‚ñå‚ñà‚ñà‚ñí
‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñë   ‚ñì‚ñà‚ñà‚ñë‚ñë‚ñí‚ñì‚ñà‚ñà‚ñà‚ñÄ‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí‚ñë ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñí‚ñà‚ñà‚ñë   ‚ñì‚ñà‚ñà‚ñë
 ‚ñí‚ñí‚ñì  ‚ñí ‚ñë‚ñí‚ñì‚ñí ‚ñí ‚ñí ‚ñë ‚ñí‚ñë   ‚ñí ‚ñí  ‚ñë‚ñí   ‚ñí ‚ñë‚ñë ‚ñí‚ñë ‚ñë‚ñë ‚ñí‚ñë‚ñí‚ñë‚ñí‚ñë ‚ñë ‚ñí‚ñë   ‚ñí ‚ñí 
 ‚ñë ‚ñí  ‚ñí ‚ñë‚ñë‚ñí‚ñë ‚ñë ‚ñë ‚ñë ‚ñë‚ñë   ‚ñë ‚ñí‚ñë  ‚ñë   ‚ñë  ‚ñë ‚ñë  ‚ñë  ‚ñë ‚ñí ‚ñí‚ñë ‚ñë ‚ñë‚ñë   ‚ñë ‚ñí‚ñë
 ‚ñë ‚ñë  ‚ñë  ‚ñë‚ñë‚ñë ‚ñë ‚ñë    ‚ñë   ‚ñë ‚ñë ‚ñë ‚ñë   ‚ñë    ‚ñë   ‚ñë ‚ñë ‚ñë ‚ñí     ‚ñë   ‚ñë ‚ñë 
   ‚ñë       ‚ñë              ‚ñë       ‚ñë    ‚ñë  ‚ñë    ‚ñë ‚ñë           ‚ñë 
 ‚ñë                                                             
                ‚ñà     ‚ñà‚ñë ‚ñà‚ñà‚ñì‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñà‚ñà‚ñë ‚ñà‚ñà                   
               ‚ñì‚ñà‚ñë ‚ñà ‚ñë‚ñà‚ñë‚ñì‚ñà‚ñà‚ñí‚ñì  ‚ñà‚ñà‚ñí ‚ñì‚ñí‚ñì‚ñà‚ñà‚ñë ‚ñà‚ñà‚ñí                  
               ‚ñí‚ñà‚ñë ‚ñà ‚ñë‚ñà ‚ñí‚ñà‚ñà‚ñí‚ñí ‚ñì‚ñà‚ñà‚ñë ‚ñí‚ñë‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñà‚ñë                  
               ‚ñë‚ñà‚ñë ‚ñà ‚ñë‚ñà ‚ñë‚ñà‚ñà‚ñë‚ñë ‚ñì‚ñà‚ñà‚ñì ‚ñë ‚ñë‚ñì‚ñà ‚ñë‚ñà‚ñà                   
               ‚ñë‚ñë‚ñà‚ñà‚ñí‚ñà‚ñà‚ñì ‚ñë‚ñà‚ñà‚ñë  ‚ñí‚ñà‚ñà‚ñí ‚ñë ‚ñë‚ñì‚ñà‚ñí‚ñë‚ñà‚ñà‚ñì                  
               ‚ñë ‚ñì‚ñë‚ñí ‚ñí  ‚ñë‚ñì    ‚ñí ‚ñë‚ñë    ‚ñí ‚ñë‚ñë‚ñí‚ñë‚ñí                  
                 ‚ñí ‚ñë ‚ñë   ‚ñí ‚ñë    ‚ñë     ‚ñí ‚ñë‚ñí‚ñë ‚ñë                  
                 ‚ñë   ‚ñë   ‚ñí ‚ñë  ‚ñë       ‚ñë  ‚ñë‚ñë ‚ñë                  
                   ‚ñë     ‚ñë            ‚ñë  ‚ñë  ‚ñë                  
                                                               
          ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ   ‚ñÑ‚ñÑ‚ñÑ       ‚ñà‚ñà‚ñÄ‚ñà‚ñà‚ñà  ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà          
         ‚ñí‚ñà‚ñà‚ñÄ ‚ñÄ‚ñà  ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñÑ    ‚ñì‚ñà‚ñà ‚ñí ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñÄ ‚ñà‚ñà‚ñå‚ñí‚ñà‚ñà    ‚ñí          
         ‚ñí‚ñì‚ñà    ‚ñÑ ‚ñí‚ñà‚ñà  ‚ñÄ‚ñà‚ñÑ  ‚ñì‚ñà‚ñà ‚ñë‚ñÑ‚ñà ‚ñí‚ñë‚ñà‚ñà   ‚ñà‚ñå‚ñë ‚ñì‚ñà‚ñà‚ñÑ            
         ‚ñí‚ñì‚ñì‚ñÑ ‚ñÑ‚ñà‚ñà‚ñí‚ñë‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà ‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñÑ  ‚ñë‚ñì‚ñà‚ñÑ   ‚ñå  ‚ñí   ‚ñà‚ñà‚ñí         
         ‚ñí ‚ñì‚ñà‚ñà‚ñà‚ñÄ ‚ñë ‚ñì‚ñà   ‚ñì‚ñà‚ñà‚ñí‚ñë‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí         
         ‚ñë ‚ñë‚ñí ‚ñí  ‚ñë ‚ñí‚ñí   ‚ñì‚ñí‚ñà‚ñë‚ñë ‚ñí‚ñì ‚ñë‚ñí‚ñì‚ñë ‚ñí‚ñí‚ñì  ‚ñí ‚ñí ‚ñí‚ñì‚ñí ‚ñí ‚ñë         
           ‚ñë  ‚ñí     ‚ñí   ‚ñí‚ñí ‚ñë  ‚ñë‚ñí ‚ñë ‚ñí‚ñë ‚ñë ‚ñí  ‚ñí ‚ñë ‚ñë‚ñí  ‚ñë ‚ñë         
         ‚ñë          ‚ñë   ‚ñí     ‚ñë‚ñë   ‚ñë  ‚ñë ‚ñë  ‚ñë ‚ñë  ‚ñë  ‚ñë           
         ‚ñë ‚ñë            ‚ñë  ‚ñë   ‚ñë        ‚ñë          ‚ñë           
         ‚ñë                            ‚ñë                        
""")

    amount_cards = 4
    deck = init_deck()
    cards = []
    hp = MAX_HP  # Health points
    dp = 0  # Defense points
    xp = 0  # Experience points
    last_was_potion = False  # Last used card was a potion

    while len(deck):
        print("")
        if len(cards) == 0:
            deck, cards = pop_cards(deck, amount_cards)
        option = ask_option(cards, hp, dp, xp)
        if option == 0:
            deck, cards = push_cards(deck, cards)
            print(f"You run away from the room")
        else:
            card = cards.pop(option - 1)
            hp, dp, xp, last_was_potion = eval_card(card, hp, dp, xp, last_was_potion)
        if hp <= 0:
            break
    show_state(hp, dp, xp)
    if hp <= 0:
        print("You died")
    else:
        print("You win")


main()